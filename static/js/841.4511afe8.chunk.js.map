{"version":3,"file":"static/js/841.4511afe8.chunk.js","mappings":"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","sources":["components/Users/Paginator.jsx","components/Users/UsersItem.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["const Paginator = ({ onPageChanged, currentPage, totalItemsCount, pageSize }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    let portionSize = 10; // Кількість сторінок у порції\r\n\r\n    // Знаходимо номер порції\r\n    let portionNumber = Math.ceil(currentPage / portionSize);\r\n\r\n    // Обчислюємо ліву та праву границі поточної порції\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    // Заповнюємо список сторінок від лівої до правої границі поточної порції\r\n    for (let i = leftPortionPageNumber; i <= rightPortionPageNumber && i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className='pagination'>\r\n            {/* Кнопка \"На початок\" */}\r\n            {currentPage > 1 && (\r\n                <button onClick={() => onPageChanged(1)}>На початок</button>\r\n            )}\r\n\r\n            {/* Кнопка \"Попередня\" */}\r\n            {currentPage > 1 && (\r\n                <button onClick={() => onPageChanged(leftPortionPageNumber - portionSize)}>\r\n                    Попередня\r\n                </button>\r\n            )}\r\n\r\n            {/* Кнопки сторінок */}\r\n            {pages.map((p, index) => (\r\n                <span\r\n                    key={index}\r\n                    onClick={() => onPageChanged(p)}\r\n                    className={currentPage === p ? 'selectedPage ' : ''}\r\n                >\r\n                    {p}\r\n                </span>\r\n            ))}\r\n\r\n            {/* Кнопка \"Наступна\" */}\r\n            {portionNumber < Math.ceil(pagesCount / portionSize) && (\r\n                <button onClick={() => onPageChanged(rightPortionPageNumber + 1)}>\r\n                    Наступна\r\n                </button>\r\n                \r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import './users.css'\r\nimport userAva from '../../img/userIcon.png'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction UsersItem(props) {\r\n    return (\r\n        <div className=\"users__item\">\r\n            <div className=\"item-profile\">\r\n                <NavLink to={\"/profile/\" + props.id} >\r\n                    <img src={props.users.photos.small == null ? userAva : props.users.photos.small}\r\n                        className=\"user-icon-profile\" alt=\"\" />\r\n                </NavLink>\r\n                {props.followed       \r\n                ? <button disabled={props.followingInProgress.some(id => id === props.id)} onClick={() => {\r\n                    props.followUnfollowThunkCreator(props.id, \"delete\", props.unfollow)\r\n                \r\n                }}>Unfollow</button> \r\n                : <button disabled={props.followingInProgress.some(id => id === props.id)} onClick={() => {\r\n                    props.followUnfollowThunkCreator(props.id, \"post\", props.follow)\r\n                    }}>Follow</button> }  \r\n            </div>\r\n            <div className=\"item-user-info\">\r\n                <div className=\"item-name-box\">\r\n                    <div className=\"user-name\">{props.name}</div>\r\n                    <div className=\"user-status\">{props.status}</div>\r\n                </div>\r\n                <div className=\"item-location-box\">\r\n                    <div className=\"user-location\">{\"props.country\"}</div>\r\n                    <div className=\"user-location\">{\"props.city\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersItem","import Paginator from \"./Paginator\";\r\nimport UsersItem from \"./UsersItem\";\r\nimport './users.css'\r\nfunction Users (props) {\r\n    return (\r\n        <div className=\"Users\">\r\n            <h4>Users</h4>\r\n            <div className=\"users__items\">\r\n                {props.users.map( item => \r\n                <UsersItem\r\n                key={item.id} name={item.name} id={item.id} followed={item.followed} follow={props.follow} \r\n                unfollow={props.unfollow} users={item}\r\n                status={item.status} country={item.country} city={item.city}\r\n                 followingInProgress={props.followingInProgress} \r\n                 followUnfollowThunkCreator={props.followUnfollowThunkCreator}\r\n                />               \r\n                )}\r\n            </div>\r\n            <Paginator \r\n            onPageChanged={props.onPageChanged} \r\n            pageSize={props.pageSize} \r\n            currentPage={props.currentPage} \r\n            totalItemsCount={props.totalItemsCount}\r\n            />\r\n            <button>Show more</button>\r\n        </div>\r\n    );\r\n}\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.userData\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalItemsCount = (state) => {\r\n    return state.usersPage.totalItemsCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import { connect } from 'react-redux'\r\nimport React from 'react';\r\nimport Users from './Users';\r\nimport { follow, setCurrentPage, unfollow, toogleFollowingInProgress, getUsersThunkCreator, followUnfollowThunkCreator } from '../../redux/usersReducer'\r\nimport Preloader from '../common/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalItemsCount, getUsers } from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (p) => {\r\n        this.props.getUsersThunkCreator(p, this.props.pageSize)\r\n        this.props.setCurrentPage(p)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users totalItemsCount={this.props.totalItemsCount} pageSize={this.props.pageSize} \r\n        users={this.props.users} follow={this.props.follow} unfollow={this.props.unfollow} \r\n        followingInProgress={this.props.followingInProgress} \r\n        onPageChanged={this.onPageChanged} currentPage={this.props.currentPage} \r\n        followUnfollowThunkCreator={this.props.followUnfollowThunkCreator}/>\r\n    </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state) ,\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalItemsCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),    \r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toogleFollowingInProgress,\r\n    getUsersThunkCreator,\r\n    followUnfollowThunkCreator\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n\r\n"],"names":["_ref","onPageChanged","currentPage","totalItemsCount","pageSize","pagesCount","Math","ceil","pages","portionNumber","leftPortionPageNumber","rightPortionPageNumber","i","push","_jsxs","className","children","_jsx","onClick","map","p","index","props","NavLink","to","id","src","users","photos","small","userAva","alt","followed","disabled","followingInProgress","some","followUnfollowThunkCreator","unfollow","follow","name","status","item","UsersItem","country","city","Paginator","getUsers","state","usersPage","userData","getPageSize","getTotalItemsCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","getUsersThunkCreator","setCurrentPage","_createClass","key","value","this","_Fragment","Preloader","Users","React","mapDispatchToProps","toogleFollowingInProgress","compose","connect","withAuthRedirect"],"sourceRoot":""}