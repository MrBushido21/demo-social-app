{"version":3,"file":"static/js/214.5f62085c.chunk.js","mappings":"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","sources":["components/Login/Login.jsx","components/Login/FormContainer.tsx"],"sourcesContent":["import './login.css'\r\nimport React from 'react';\r\nimport { Formik, Form, Field, withFormik } from 'formik';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n//=========== Валідація\r\nfunction validateEmail(value) {\r\n  if (!value) {\r\n    return \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\r\n    return 'Invalid email address';\r\n  }\r\n}\r\nfunction validatePassword(value) {\r\n  if (!value) {\r\n    return \"Помилка!\";\r\n  }\r\n}\r\nfunction validateCheck(checked) {\r\n  if (!checked) {\r\n    return \"Натисніть 'запам'ятати мене'!\";\r\n  }\r\n}\r\n//============ Верстка\r\nfunction LoginForm(props) {\r\n  console.log(props.captcha);\r\nreturn <Form className='form'>\r\n\r\n    <label className={`label ${props.errors.email && props.touched.email ? \"label-error\" : \"\"}`}>\r\n      Email: mrbushido21@ukr.net\r\n    </label>\r\n\r\n    <Field\r\n      className={`input ${props.errors.email && props.touched.email ? \"input-error\" : \"\"}`}\r\n      type=\"text\"\r\n      validate={validateEmail}\r\n      name=\"email\"\r\n      placeholder=\"Email\"\r\n      value={props.values.email}\r\n      onChange={props.handleChange}\r\n    />\r\n\r\n    {props.errors.email && props.touched.email && (\r\n      <div className='error'>{props.errors.email}</div>\r\n    )}\r\n\r\n    <label className={`label ${props.errors.password && props.touched.password ? \"label-error\" : \"\"}`}>\r\n      Password: qwert78yui\r\n    </label>\r\n\r\n    <Field\r\n      className={`input ${props.errors.password && props.touched.password ? \"input-error\" : \"\"}`}\r\n      type=\"password\"\r\n      validate={validatePassword}\r\n      name=\"password\"\r\n      placeholder=\"Password\"\r\n      value={props.values.password}\r\n      onChange={props.handleChange}\r\n    />\r\n\r\n    {props.errors.password && props.touched.password && (\r\n      <div className='error'>{props.errors.password}</div>\r\n    )}\r\n\r\n    {props.captcha && \r\n    <div className='cpatcha-box'>\r\n      <img className='captcha' src={props.captcha} />\r\n      <Field\r\n      className=\"input\"\r\n       name=\"captcha\"\r\n       type=\"text\" \r\n       placeholder=\"Captcha...\"\r\n       value={props.values.captcha}\r\n       onChange={props.handleChange}\r\n       />\r\n    </div>\r\n    }\r\n\r\n    <div className='check-box'>\r\n\r\n    <Field \r\n      className={`check ${props.errors.rememberMe && props.touched.rememberMe ? \"error\" : \"\"}`}\r\n      type=\"checkbox\"\r\n      name=\"rememberMe\"\r\n      validate={validateCheck}\r\n    />\r\n\r\n    {props.errors.rememberMe && props.touched.rememberMe && (\r\n      <div className='error'>{props.errors.rememberMe}</div>\r\n    )}\r\n\r\n    <span \r\n      className={`span-remember ${props.errors.rememberMe && props.touched.rememberMe ? \"error\" : \"\"}`}\r\n    >remember me</span>\r\n    </div>\r\n\r\n    <button\r\n     className={`login-btn ${props.errors.rememberMe || props.errors.email || props.errors.password  ? \"error-button\" : \"\"}`} \r\n     type=\"submit\">Submit</button>\r\n\r\n  </Form>\r\n}\r\n\r\n//=========== Тут логіка\r\nconst FormikLoginForm = withFormik({\r\n  mapPropsToValues: () => ({ email: null, password: null, rememberMe: null, captcha: null}),\r\n  handleSubmit: (values, { props }) => {\r\n    props.setEmail(values.email);\r\n    props.setPassword(values.password);\r\n    props.setCaptcha(values.captcha)\r\n    props.LoginThunk(values.email, values.password, values.rememberMe, values.captcha)\r\n    console.log(\"submit\", values);\r\n  }\r\n})(LoginForm);\r\n\r\n\r\n//======== Редірект\r\nfunction Login(props) {\r\n  if (props.isAuth) {\r\n    return <Navigate to={'/profile'} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>My Form</h1>\r\n      <FormikLoginForm {...props} />\r\n      {props.error && <div className=\"error\">{props.error}</div>}\r\n    </>\r\n  );\r\n}\r\n//=============\r\nexport default Login;\r\n\r\n","import { compose} from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport Login from \"./Login\";\r\nimport {setEmail, setPassword, setCaptcha,} from \"../../redux/formReducer.ts\"\r\nimport {LoginThunk, getCaptchaThunk} from \"../../redux/authReducer.ts\"\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\n\r\ntype mapStateType = {\r\n    email: string\r\n    password: string\r\n    isAuth: boolean\r\n    error: string | null\r\n    captcha: string | null\r\n}\r\ntype mapDispatchType = {\r\n    setEmail: (email: string) => { type: string; payload: string; }\r\n    setPassword: (password: string) => { type: string; payload: string; }\r\n    setCaptcha: (captcha: string | null) => { type: string; payload: string | null; }\r\n    LoginThunk: (email: string, password: string, rememberMe: boolean, captcha: any) => (dispatch: any) => Promise<any>\r\n    getCaptchaThunk: () => void\r\n}\r\n\r\nclass FormContainer extends React.Component {\r\n    render() {\r\n        return  <>\r\n        <Login {...this.props}/> \r\n        </>\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state:AppStateType):mapStateType => ({\r\n    email: state.form.email,\r\n    password: state.form.password,\r\n    isAuth: state.auth.isAuth,\r\n    error: state.auth.error,\r\n    captcha: state.auth.captchaUrl\r\n})\r\nlet mapDspatchToprops:mapDispatchType = ({\r\n    setEmail,\r\n    setPassword,\r\n    setCaptcha,\r\n    LoginThunk,\r\n    getCaptchaThunk\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDspatchToprops),\r\n    \r\n)(FormContainer)\r\n"],"names":["validateEmail","value","test","validatePassword","validateCheck","checked","FormikLoginForm","withFormik","mapPropsToValues","email","password","rememberMe","captcha","handleSubmit","values","_ref","props","setEmail","setPassword","setCaptcha","LoginThunk","console","log","_jsxs","Form","className","children","_jsx","concat","errors","touched","Field","type","validate","name","placeholder","onChange","handleChange","src","isAuth","Navigate","to","_Fragment","_objectSpread","error","FormContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","Login","this","React","mapDspatchToprops","getCaptchaThunk","compose","connect","state","form","auth","captchaUrl"],"sourceRoot":""}