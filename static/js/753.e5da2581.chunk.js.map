{"version":3,"file":"static/js/753.e5da2581.chunk.js","mappings":"yNA+DA,EAtDuC,SAAHA,GAehC,IAfmG,IAA7DC,EAAaD,EAAbC,cAAeC,EAAWF,EAAXE,YAAaC,EAAeH,EAAfG,gBAAiBC,EAAQJ,EAARI,SAC/EC,EAAaC,KAAKC,KAAKJ,EAAkBC,GAEzCI,EAAiB,GAKjBC,EAAgBH,KAAKC,KAAKL,EAHZ,IAMdQ,EANc,IAMWD,EAAgB,GAAmB,EAC5DE,EAPc,GAOWF,EAGpBG,EAAIF,EAAuBE,GAAKD,GAA0BC,GAAKP,EAAYO,IAChFJ,EAAMK,KAAKD,GAEf,OACIE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,CAEtBd,EAAc,IACXe,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMjB,EAAc,EAAE,EAACe,SAAC,4DAI5Cd,EAAc,IACXe,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMjB,EAAcS,EAtB/B,GAsBmE,EAACM,SAAC,2DAM9ER,EAAMW,KAAI,SAACC,EAAGC,GAAK,OAChBJ,EAAAA,EAAAA,KAAA,QAEIC,QAAS,kBAAMjB,EAAcmB,EAAE,EAC/BL,UAAWb,IAAgBkB,EAAI,gBAAkB,GAAGJ,SAEnDI,GAJIC,EAKF,IAIVZ,EAAgBH,KAAKC,KAAKF,EAvCjB,MAwCNY,EAAAA,EAAAA,KAAA,UAAQC,QAAS,kBAAMjB,EAAcU,EAAyB,EAAE,EAACK,SAAC,uDAOlF,E,iECZA,MA/BA,SAAmBM,GACf,OACIR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAI,YAAcF,EAAMG,GAAGT,UAChCC,EAAAA,EAAAA,KAAA,OAAKS,IAAgC,MAA3BJ,EAAMK,KAAKC,OAAOC,MAAgBC,EAAUR,EAAMK,KAAKC,OAAOC,MACpEd,UAAU,oBAAoBgB,IAAI,OAEzCT,EAAMU,UACLf,EAAAA,EAAAA,KAAA,UAAQgB,SAAUX,EAAMY,oBAAoBC,MAAK,SAAAV,GAAE,OAAIA,IAAOH,EAAMG,EAAE,IAAGP,QAAS,WAChFI,EAAMc,2BAA2Bd,EAAMG,GAAI,SAAUH,EAAMe,SAE/D,EAAErB,SAAC,cACDC,EAAAA,EAAAA,KAAA,UAAQgB,SAAUX,EAAMY,oBAAoBC,MAAK,SAAAV,GAAE,OAAIA,IAAOH,EAAMG,EAAE,IAAGP,QAAS,WAChFI,EAAMc,2BAA2Bd,EAAMG,GAAI,OAAQH,EAAMgB,OACzD,EAAEtB,SAAC,eAEXF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YAAWC,SAAEM,EAAMiB,QAClCtB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEM,EAAMkB,aAExC1B,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAE,mBAChCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAE,uBAKpD,ECLA,MAxBA,SAAgBM,GACZ,OACIR,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAcC,SACxBM,EAAMmB,MAAMtB,KAAI,SAAAQ,GAAI,OACrBV,EAAAA,EAAAA,KAACyB,EAAS,CACIH,KAAMZ,EAAKY,KAAMd,GAAIE,EAAKF,GAAIO,SAAUL,EAAKK,SAAUM,OAAQhB,EAAMgB,OACnFD,SAAUf,EAAMe,SAAUV,KAAMA,EAChCa,OAAQb,EAAKa,OACZN,oBAAqBZ,EAAMY,oBAC3BE,2BAA4Bd,EAAMc,4BAJ9BT,EAAKF,GAKR,OAGNR,EAAAA,EAAAA,KAAC0B,EAAS,CACV1C,cAAeqB,EAAMrB,cACrBG,SAAUkB,EAAMlB,SAChBF,YAAaoB,EAAMpB,YACnBC,gBAAiBmB,EAAMnB,oBAInC,E,uCCvCayC,EAAW,SAACC,GACrB,OAAOA,EAAMC,UAAUC,QAC3B,EACaC,EAAc,SAACH,GACxB,OAAOA,EAAMC,UAAU1C,QAC3B,EACa6C,EAAqB,SAACJ,GAC/B,OAAOA,EAAMC,UAAU3C,eAC3B,EACa+C,EAAiB,SAACL,GAC3B,OAAOA,EAAMC,UAAU5C,WAC3B,EACaiD,EAAgB,SAACN,GAC1B,OAAOA,EAAMC,UAAUM,UAC3B,EACaC,EAAyB,SAACR,GACnC,OAAOA,EAAMC,UAAUZ,mBAC3B,ECCIoB,EAAiBC,EAAAA,GAAQD,eASvBE,EAAc,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GASf,OATeP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KAMhBjE,cAAgB,SAACmB,GACbyC,EAAKvC,MAAMkD,qBAAqBpD,EAAGyC,EAAKvC,MAAMlB,UAC9CyD,EAAKvC,MAAMgC,eAAelC,EAC9B,EAACyC,CAAA,CAYA,OAZAY,EAAAA,EAAAA,GAAAjB,EAAA,EAAAkB,IAAA,oBAAAC,MAPD,WACIC,KAAKtD,MAAMkD,qBAAqBI,KAAKtD,MAAMpB,YAAa0E,KAAKtD,MAAMlB,SACvE,GAAC,CAAAsE,IAAA,SAAAC,MAQD,WACI,OAAO7D,EAAAA,EAAAA,MAAA+D,EAAAA,SAAA,CAAA7D,SAAA,CACN4D,KAAKtD,MAAM8B,YAAanC,EAAAA,EAAAA,KAAC6D,EAAAA,EAAS,IAAM,MACzC7D,EAAAA,EAAAA,KAAC8D,EAAK,CAAC5E,gBAAiByE,KAAKtD,MAAMnB,gBAAiBC,SAAUwE,KAAKtD,MAAMlB,SACzEqC,MAAOmC,KAAKtD,MAAMmB,MAAOH,OAAQiB,EAAAA,GAAQjB,OAAQD,SAAUkB,EAAAA,GAAQlB,SACnEH,oBAAqB0C,KAAKtD,MAAMY,oBAChCjC,cAAe2E,KAAK3E,cAAeC,YAAa0E,KAAKtD,MAAMpB,YAC3DkC,2BAA4BwC,KAAKtD,MAAMc,+BAE3C,KAACoB,CAAA,CArBe,CAASwB,EAAAA,WAoCzBC,EAAqC,CACrCT,qBAAAA,EAAAA,GACAlB,eAAAA,EACAlB,2BAAAA,EAAAA,IAIJ,GAAe8C,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAnBkB,SAACtC,GACnB,MAAO,CACHJ,MAAOG,EAASC,GAChBzC,SAAU4C,EAAYH,GACtB1C,gBAAiB8C,EAAmBJ,GACpC3C,YAAagD,EAAeL,GAC5BO,WAAYD,EAAcN,GAC1BX,oBAAqBmB,EAAuBR,GAEpD,GAU6BoC,GACzBG,EAAAA,EAFJ,CAGE5B,E","sources":["components/Users/Paginator.tsx","components/Users/UsersItem.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype PropsType = {\r\n    onPageChanged: (p: number) => any\r\n    currentPage: number\r\n    totalItemsCount:number\r\n    pageSize:number\r\n}\r\n\r\nconst Paginator: React.FC<PropsType> = ({ onPageChanged, currentPage, totalItemsCount, pageSize }) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages:number[] = [];\r\n    \r\n    let portionSize = 10; // Кількість сторінок у порції\r\n\r\n    // Знаходимо номер порції\r\n    let portionNumber = Math.ceil(currentPage / portionSize);\r\n\r\n    // Обчислюємо ліву та праву границі поточної порції\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    // Заповнюємо список сторінок від лівої до правої границі поточної порції\r\n    for (let i = leftPortionPageNumber; i <= rightPortionPageNumber && i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div className='pagination'>\r\n            {/* Кнопка \"На початок\" */}\r\n            {currentPage > 1 && (\r\n                <button onClick={() => onPageChanged(1)}>На початок</button>\r\n            )}\r\n\r\n            {/* Кнопка \"Попередня\" */}\r\n            {currentPage > 1 && (\r\n                <button onClick={() => onPageChanged(leftPortionPageNumber - portionSize)}>\r\n                    Попередня\r\n                </button>\r\n            )}\r\n\r\n            {/* Кнопки сторінок */}\r\n            {pages.map((p, index) => (\r\n                <span\r\n                    key={index}\r\n                    onClick={() => onPageChanged(p)}\r\n                    className={currentPage === p ? 'selectedPage ' : ''}\r\n                >\r\n                    {p}\r\n                </span>\r\n            ))}\r\n\r\n            {/* Кнопка \"Наступна\" */}\r\n            {portionNumber < Math.ceil(pagesCount / portionSize) && (\r\n                <button onClick={() => onPageChanged(rightPortionPageNumber + 1)}>\r\n                    Наступна\r\n                </button>\r\n                 \r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paginator;","import './users.css'\r\nimport React from 'react';\r\nimport userAva from '../../img/userIcon.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { userDataType } from '../../types/types';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    item: userDataType\r\n    followed: boolean\r\n    followingInProgress: Array<number>\r\n    followUnfollowThunkCreator:(propsId:number, serverAction:string, funcAction:(userId:number) => {type: string, userId:number}) => void\r\n    unfollow:(userId:number) => {type: string, userId:number}\r\n    follow: (userId:number) => {type: string, userId:number}\r\n    name: string\r\n    status: string\r\n}\r\n\r\nfunction UsersItem(props: PropsType) {\r\n    return (\r\n        <div className=\"users__item\">\r\n            <div className=\"item-profile\">\r\n                <NavLink to={\"/profile/\" + props.id} >\r\n                    <img src={props.item.photos.small == null ? userAva : props.item.photos.small}\r\n                        className=\"user-icon-profile\" alt=\"\" />\r\n                </NavLink>\r\n                {props.followed       \r\n                ? <button disabled={props.followingInProgress.some(id => id === props.id)} onClick={() => {\r\n                    props.followUnfollowThunkCreator(props.id, \"delete\", props.unfollow)\r\n                \r\n                }}>Unfollow</button> \r\n                : <button disabled={props.followingInProgress.some(id => id === props.id)} onClick={() => {\r\n                    props.followUnfollowThunkCreator(props.id, \"post\", props.follow)\r\n                    }}>Follow</button> }  \r\n            </div>\r\n            <div className=\"item-user-info\">\r\n                <div className=\"item-name-box\">\r\n                    <div className=\"user-name\">{props.name}</div>\r\n                    <div className=\"user-status\">{props.status}</div>\r\n                </div>\r\n                <div className=\"item-location-box\">\r\n                    <div className=\"user-location\">{\"props.country\"}</div>\r\n                    <div className=\"user-location\">{\"props.city\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UsersItem","import React from \"react\";\r\nimport Paginator from \"./Paginator.tsx\";\r\nimport UsersItem from \"./UsersItem.tsx\";\r\nimport './users.css'\r\nimport { userDataType } from \"../../types/types.js\";\r\n\r\nexport type PropsType = {\r\n    onPageChanged: (p: number) => void\r\n    currentPage: number\r\n    totalItemsCount:number\r\n    pageSize:number\r\n    users: Array<userDataType>\r\n    follow: (userId:number) => {type: string, userId:number}\r\n    unfollow: (userId:number) => {type: string, userId:number}\r\n    followingInProgress: Array<number>\r\n    followUnfollowThunkCreator: (propsId:number, serverAction:string, funcAction:(userId:number) => {type: string, userId:number}) => void\r\n}\r\n\r\nfunction Users (props:PropsType) {\r\n    return (\r\n        <div className=\"Users\">\r\n            <h4>Users</h4>\r\n            <div className=\"users__items\">\r\n                {props.users.map(item => \r\n                <UsersItem\r\n                key={item.id} name={item.name} id={item.id} followed={item.followed} follow={props.follow} \r\n                unfollow={props.unfollow} item={item}\r\n                status={item.status}\r\n                 followingInProgress={props.followingInProgress} \r\n                 followUnfollowThunkCreator={props.followUnfollowThunkCreator}\r\n                />               \r\n                )}\r\n            </div>\r\n            <Paginator \r\n            onPageChanged={props.onPageChanged} \r\n            pageSize={props.pageSize} \r\n            currentPage={props.currentPage} \r\n            totalItemsCount={props.totalItemsCount}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default Users;","import { AppStateType } from \"./redux-store\"\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.userData\r\n}\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalItemsCount = (state: AppStateType) => {\r\n    return state.usersPage.totalItemsCount\r\n}\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import { connect } from 'react-redux'\r\nimport React, {useEffect} from 'react';\r\nimport Users from './Users.tsx';\r\nimport {getUsersThunkCreator, followUnfollowThunkCreator, actions} from '../../redux/usersReducer.ts'\r\nimport Preloader from '../common/Preloader';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, \r\n    getPageSize, getTotalItemsCount, getUsers } from '../../redux/users-selectors.ts';\r\nimport { userDataType } from '../../types/types.ts';\r\nimport { AppStateType } from '../../redux/redux-store.ts';\r\n\r\ntype MapStateType = {\r\n    users:Array<userDataType>\r\n    pageSize:number\r\n    totalItemsCount: number\r\n    currentPage:number\r\n    isFetching:boolean\r\n    followingInProgress: Array<number>\r\n}\r\nlet setCurrentPage = actions.setCurrentPage;\r\n\r\ntype MapDispatchType = {\r\n    getUsersThunkCreator:(currentPage:number, pageSize:number) => void  \r\n    setCurrentPage: (p: number) => void\r\n    followUnfollowThunkCreator: (propsId:number, serverAction:string, funcAction:(userId:number) => {type: string, userId:number}) => void\r\n}\r\ntype PropsType = MapStateType & MapDispatchType\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (p:number) => {\r\n        this.props.getUsersThunkCreator(p, this.props.pageSize)\r\n        this.props.setCurrentPage(p)    \r\n    }\r\n\r\n    \r\n    render() {       \r\n        return <>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Users totalItemsCount={this.props.totalItemsCount} pageSize={this.props.pageSize} \r\n        users={this.props.users} follow={actions.follow} unfollow={actions.unfollow} \r\n        followingInProgress={this.props.followingInProgress} \r\n        onPageChanged={this.onPageChanged} currentPage={this.props.currentPage} \r\n        followUnfollowThunkCreator={this.props.followUnfollowThunkCreator}/>\r\n    </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType):MapStateType => {\r\n    return {\r\n        users: getUsers(state) ,\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalItemsCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),   \r\n    }\r\n}\r\n\r\nlet mapDispatchToProps:MapDispatchType = {\r\n    getUsersThunkCreator,\r\n    setCurrentPage,\r\n    followUnfollowThunkCreator\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(UsersContainer)\r\n\r\n"],"names":["_ref","onPageChanged","currentPage","totalItemsCount","pageSize","pagesCount","Math","ceil","pages","portionNumber","leftPortionPageNumber","rightPortionPageNumber","i","push","_jsxs","className","children","_jsx","onClick","map","p","index","props","NavLink","to","id","src","item","photos","small","userAva","alt","followed","disabled","followingInProgress","some","followUnfollowThunkCreator","unfollow","follow","name","status","users","UsersItem","Paginator","getUsers","state","usersPage","userData","getPageSize","getTotalItemsCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","setCurrentPage","actions","UsersContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","getUsersThunkCreator","_createClass","key","value","this","_Fragment","Preloader","Users","React","mapDispatchToProps","compose","connect","withAuthRedirect"],"sourceRoot":""}