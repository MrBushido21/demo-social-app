{"version":3,"file":"static/js/723.767cc3ed.chunk.js","mappings":"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","sources":["components/Login/Login.jsx","components/Login/FormContainer.jsx"],"sourcesContent":["import './login.css'\r\nimport React from 'react';\r\nimport { Formik, Form, Field, withFormik } from 'formik';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n//=========== Валідація\r\nfunction validateEmail(value) {\r\n  if (!value) {\r\n    return \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)) {\r\n    return 'Invalid email address';\r\n  }\r\n}\r\nfunction validatePassword(value) {\r\n  if (!value) {\r\n    return \"Помилка!\";\r\n  }\r\n}\r\nfunction validateCheck(checked) {\r\n  if (!checked) {\r\n    return \"Натисніть 'запам'ятати мене'!\";\r\n  }\r\n}\r\n//============ Верстка\r\nfunction LoginForm(props) {\r\n\r\nreturn <Form className='form'>\r\n    <label className={`label ${props.errors.email && props.touched.email ? \"label-error\" : \"\"}`}>\r\n      Email:\r\n    </label>\r\n    <Field\r\n      className={`input ${props.errors.email && props.touched.email ? \"input-error\" : \"\"}`}\r\n      type=\"text\"\r\n      validate={validateEmail}\r\n      name=\"email\"\r\n      placeholder=\"Email\"\r\n      value={props.values.email}\r\n      onChange={props.handleChange}\r\n    />\r\n    {props.errors.email && props.touched.email && (\r\n      <div className='error'>{props.errors.email}</div>\r\n    )}\r\n    <label className={`label ${props.errors.password && props.touched.password ? \"label-error\" : \"\"}`}>\r\n      Password:\r\n    </label>\r\n    <Field\r\n      className={`input ${props.errors.password && props.touched.password ? \"input-error\" : \"\"}`}\r\n      type=\"password\"\r\n      validate={validatePassword}\r\n      name=\"password\"\r\n      placeholder=\"Password\"\r\n      value={props.values.password}\r\n      onChange={props.handleChange}\r\n    />\r\n    {props.errors.password && props.touched.password && (\r\n      <div className='error'>{props.errors.password}</div>\r\n    )}\r\n    <div className='check-box'>\r\n    <Field \r\n      className={`check ${props.errors.rememberMe && props.touched.rememberMe ? \"error\" : \"\"}`}\r\n      type=\"checkbox\"\r\n      name=\"rememberMe\"\r\n      validate={validateCheck}\r\n    />\r\n    {props.errors.rememberMe && props.touched.rememberMe && (\r\n      <div className='error'>{props.errors.rememberMe}</div>\r\n    )}\r\n    <span \r\n      className={`span-remember ${props.errors.rememberMe && props.touched.rememberMe ? \"error\" : \"\"}`}\r\n    >remember me</span>\r\n    </div>\r\n    <button\r\n     className={`login-btn ${props.errors.rememberMe || props.errors.email || props.errors.password  ? \"error-button\" : \"\"}`} \r\n     type=\"submit\">Submit</button>\r\n\r\n  </Form>\r\n}\r\n\r\n//=========== Тут логіка\r\nconst FormikLoginForm = withFormik({\r\n  mapPropsToValues: () => ({ email: null, password: null, rememberMe: null,}),\r\n  handleSubmit: (values, { props }) => {\r\n    props.setEmail(values.email);\r\n    props.setPassword(values.password);\r\n    props.LoginThunk(values.email, values.password, values.rememberMe)\r\n    console.log(\"submit\", values);\r\n  }\r\n})(LoginForm);\r\n\r\n\r\n//======== Редірект\r\nfunction Login(props) {\r\n  if (props.isAuth) {\r\n    return <Navigate to={'/profile'} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>My Form</h1>\r\n      <FormikLoginForm {...props} />\r\n      {props.error && <div className=\"error\">{props.error}</div>}\r\n    </>\r\n  );\r\n}\r\n//=============\r\nexport default Login;\r\n\r\n","import { compose} from \"redux\";\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport Login from \"./Login\";\r\nimport {setEmail, setPassword, setName, setNumber} from \"../../redux/formReducer\"\r\nimport {LoginThunk} from \"../../redux/authReducer\"\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nclass FormContainer extends React.Component {\r\n    render() {\r\n        return  <>\r\n        <Login {...this.props}/>\r\n        </>\r\n\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    email: state.form.email,\r\n    password: state.form.password,\r\n    isAuth: state.auth.isAuth,\r\n    error: state.auth.error\r\n})\r\nlet mapDspatchToprops =  ({\r\n    setEmail,\r\n    setPassword,\r\n    setName,\r\n    setNumber,\r\n    LoginThunk\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDspatchToprops),\r\n    \r\n)(FormContainer)\r\n"],"names":["validateEmail","value","test","validatePassword","validateCheck","checked","FormikLoginForm","withFormik","mapPropsToValues","email","password","rememberMe","handleSubmit","values","_ref","props","setEmail","setPassword","LoginThunk","console","log","_jsxs","Form","className","children","_jsx","concat","errors","touched","Field","type","validate","name","placeholder","onChange","handleChange","isAuth","Navigate","to","_Fragment","_objectSpread","error","FormContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","Login","this","React","mapDspatchToprops","setName","setNumber","compose","connect","state","form","auth"],"sourceRoot":""}